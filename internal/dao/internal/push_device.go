// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PushDeviceDao is the data access object for table push_device.
type PushDeviceDao struct {
	table   string            // table is the underlying table name of the DAO.
	group   string            // group is the database configuration group name of current DAO.
	columns PushDeviceColumns // columns contains all the column names of Table for convenient usage.
}

// PushDeviceColumns defines and stores column names for table push_device.
type PushDeviceColumns struct {
	Id             string // 推送设备表主键id
	DeviceName     string // 设备名称
	BaseUrl        string // 推送基础URL
	ServiceIdList  string // 推送服务id列表
	LatestPushTime string // 最近推送时间
	DeviceStatus   string // 设备状态
	CreateTime     string // 创建时间
}

// pushDeviceColumns holds the columns for table push_device.
var pushDeviceColumns = PushDeviceColumns{
	Id:             "id",
	DeviceName:     "device_name",
	BaseUrl:        "base_url",
	ServiceIdList:  "service_id_list",
	LatestPushTime: "latest_push_time",
	DeviceStatus:   "device_status",
	CreateTime:     "create_time",
}

// NewPushDeviceDao creates and returns a new DAO object for table data access.
func NewPushDeviceDao() *PushDeviceDao {
	return &PushDeviceDao{
		group:   "default",
		table:   "push_device",
		columns: pushDeviceColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PushDeviceDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PushDeviceDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PushDeviceDao) Columns() PushDeviceColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PushDeviceDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PushDeviceDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PushDeviceDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
