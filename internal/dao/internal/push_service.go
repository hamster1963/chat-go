// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PushServiceDao is the data access object for table push_service.
type PushServiceDao struct {
	table   string             // table is the underlying table name of the DAO.
	group   string             // group is the database configuration group name of current DAO.
	columns PushServiceColumns // columns contains all the column names of Table for convenient usage.
}

// PushServiceColumns defines and stores column names for table push_service.
type PushServiceColumns struct {
	Id              string // 推送服务表主键id
	ServiceName     string // 推送服务名称
	ServiceSign     string // 推送服务标识
	ServiceStatus   string // 服务状态
	ServicePushTime string // 服务最新推送时间
}

// pushServiceColumns holds the columns for table push_service.
var pushServiceColumns = PushServiceColumns{
	Id:              "id",
	ServiceName:     "service_name",
	ServiceSign:     "service_sign",
	ServiceStatus:   "service_status",
	ServicePushTime: "service_push_time",
}

// NewPushServiceDao creates and returns a new DAO object for table data access.
func NewPushServiceDao() *PushServiceDao {
	return &PushServiceDao{
		group:   "default",
		table:   "push_service",
		columns: pushServiceColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PushServiceDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PushServiceDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PushServiceDao) Columns() PushServiceColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PushServiceDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PushServiceDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PushServiceDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
